"""
https://drive.google.com/file/d/1anUmjPJ1rSyBmQjKiMBIV0o5qbGlvBOl/view?usp=sharing
1. Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не завершается, а запрашивает новые данные для вычислений.
Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'),
программа должна сообщать об ошибке и снова запрашивать знак операции.
Также она должна сообщать пользователю о невозможности деления на ноль, если он ввел его в качестве делителя.

Последовательные действия мои умозаключения.

1) Получить у пользователя два числа и знак действия
     "Реадизацию программы буду делать функциями  потом условия проверяет знак "
2)Входим в цикл:
3) Проверяю знак "+,-,*,/"
4) Если 0 то выходим из программы
5) В зависемости от знака делаем вычесления
6) "/" и "0" - на ноль делить нельзя
7) вывести результат на экран
"""

print('Это простейший калькулятор вам надо будет вести 2ва числа')
print('и арефмитическое действие')
print('Числа должни буть целыми.')
c = ''


def adding(a1, b1):
    return a1 + b1


def subtracting(a1, b1):
    return a1 - b1


def multiplication(a1, b1):
    return a1 * b1


def dividing(a1, b1):
    return a1 / b1


while c != '0':
    c = input('Ведите арефмитический знак: ')
    a = int(input('Ведите первое число: '))
    b = int(input('Ведите второе число: '))
    if c == '+':
        print(adding(a, b))
    elif c == '-':
        print(subtracting(a, b))
    elif c == '*':
        print(multiplication(a, b))
    # Тут можно было сделоть при помощи исключений
    # поймать исключения на 0 делить нельзя
    # но я сделал свою проверку.
    elif c == '/':
        if a != 0 and b != 0:
            print(int(dividing(a, b)))
        else:
            print('На 0 делить нелья!!!')

print('Спасибо что воспользовались моей программой')
